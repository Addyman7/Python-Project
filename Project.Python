{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c3bbed0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import xlrd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "75e6dbc4",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=pd.read_csv(\"Customer Acqusition.csv\")\n",
    "data1=pd.read_csv(\"Repayment.csv\")\n",
    "data2=pd.read_csv(\"Spend.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "18d49a69",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 100 entries, 0 to 99\n",
      "Data columns (total 8 columns):\n",
      " #   Column               Non-Null Count  Dtype  \n",
      "---  ------               --------------  -----  \n",
      " 0   Sl No:               100 non-null    int64  \n",
      " 1   Customer             100 non-null    object \n",
      " 2   Age                  100 non-null    float64\n",
      " 3   City                 100 non-null    object \n",
      " 4   Credit Card Product  100 non-null    object \n",
      " 5   Limit                100 non-null    object \n",
      " 6   Company              100 non-null    object \n",
      " 7   Segment              100 non-null    object \n",
      "dtypes: float64(1), int64(1), object(6)\n",
      "memory usage: 6.4+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8850bc12",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1523 entries, 0 to 1522\n",
      "Data columns (total 5 columns):\n",
      " #   Column      Non-Null Count  Dtype  \n",
      "---  ------      --------------  -----  \n",
      " 0   SL No:      1500 non-null   float64\n",
      " 1   Customer    1500 non-null   object \n",
      " 2   Month       1500 non-null   object \n",
      " 3   Repay       1500 non-null   float64\n",
      " 4   Unnamed: 4  0 non-null      float64\n",
      "dtypes: float64(3), object(2)\n",
      "memory usage: 59.6+ KB\n"
     ]
    }
   ],
   "source": [
    "data1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3f687255",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1500 entries, 0 to 1499\n",
      "Data columns (total 5 columns):\n",
      " #   Column    Non-Null Count  Dtype \n",
      "---  ------    --------------  ----- \n",
      " 0   Sl No:    1500 non-null   int64 \n",
      " 1   Customer  1500 non-null   object\n",
      " 2   Month     1500 non-null   object\n",
      " 3   Type      1500 non-null   object\n",
      " 4   Amount    1500 non-null   int64 \n",
      "dtypes: int64(2), object(3)\n",
      "memory usage: 58.7+ KB\n"
     ]
    }
   ],
   "source": [
    "data2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "19bd0831",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['JEWELLERY', 'PETRO', 'CLOTHES', 'FOOD', 'CAMERA', 'SANDALS',\n",
       "       'CAR', 'BIKE', 'AUTO', 'SHOPPING', 'AIR TICKET', 'BUS TICKET',\n",
       "       'TRAIN TICKET', 'RENTAL', 'MOVIE TICKET'], dtype=object)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2['Type'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8b3e6fbe",
   "metadata": {},
   "outputs": [],
   "source": [
    "category_mapping = {\n",
    "    'JEWELLERY': 'Luxury',\n",
    "    'PETRO': 'Transportation',\n",
    "    'CLOTHES': 'Apparel',\n",
    "    'FOOD': 'Food & Dining',\n",
    "    'CAMERA': 'Electronics',\n",
    "    'SANDALS': 'Apparel',\n",
    "    'CAR': 'Transportation',\n",
    "    'BIKE': 'Transportation',\n",
    "    'AUTO': 'Transportation',\n",
    "    'SHOPPING': 'Retail',\n",
    "    'AIR TICKET': 'Travel',\n",
    "    'BUS TICKET': 'Travel',\n",
    "    'TRAIN TICKET': 'Travel',\n",
    "    'RENTAL': 'Housing',\n",
    "    'MOVIE TICKET': 'Entertainment'\n",
    "}\n",
    "data2['Category']=data2['Type'].map(category_mapping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "384ba719",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'JEWELLERY': 'Luxury',\n",
       " 'PETRO': 'Transportation',\n",
       " 'CLOTHES': 'Apparel',\n",
       " 'FOOD': 'Food & Dining',\n",
       " 'CAMERA': 'Electronics',\n",
       " 'SANDALS': 'Apparel',\n",
       " 'CAR': 'Transportation',\n",
       " 'BIKE': 'Transportation',\n",
       " 'AUTO': 'Transportation',\n",
       " 'SHOPPING': 'Retail',\n",
       " 'AIR TICKET': 'Travel',\n",
       " 'BUS TICKET': 'Travel',\n",
       " 'TRAIN TICKET': 'Travel',\n",
       " 'RENTAL': 'Housing',\n",
       " 'MOVIE TICKET': 'Entertainment'}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "category_mapping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a7f0e067",
   "metadata": {},
   "outputs": [],
   "source": [
    "mean_age=data['Age'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f83802d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data['Age']<18,'Age']=mean_age"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5bcc793e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sl No:</th>\n",
       "      <th>Customer</th>\n",
       "      <th>Age</th>\n",
       "      <th>City</th>\n",
       "      <th>Credit Card Product</th>\n",
       "      <th>Limit</th>\n",
       "      <th>Company</th>\n",
       "      <th>Segment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>A1</td>\n",
       "      <td>40.146511</td>\n",
       "      <td>BANGALORE</td>\n",
       "      <td>Gold</td>\n",
       "      <td>INR 5,00,000.00</td>\n",
       "      <td>C1</td>\n",
       "      <td>Self Employed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>A2</td>\n",
       "      <td>35.534600</td>\n",
       "      <td>CALCUTTA</td>\n",
       "      <td>Silver</td>\n",
       "      <td>INR 1,00,000.00</td>\n",
       "      <td>C2</td>\n",
       "      <td>Salaried_MNC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>A3</td>\n",
       "      <td>40.146511</td>\n",
       "      <td>COCHIN</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,000.00</td>\n",
       "      <td>C3</td>\n",
       "      <td>Salaried_Pvt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>A4</td>\n",
       "      <td>45.820300</td>\n",
       "      <td>BOMBAY</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,001.00</td>\n",
       "      <td>C4</td>\n",
       "      <td>Govt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>A5</td>\n",
       "      <td>69.663900</td>\n",
       "      <td>BANGALORE</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,002.00</td>\n",
       "      <td>C5</td>\n",
       "      <td>Normal Salary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>96</td>\n",
       "      <td>A96</td>\n",
       "      <td>29.631600</td>\n",
       "      <td>CHENNAI</td>\n",
       "      <td>Silver</td>\n",
       "      <td>INR 1,00,000.00</td>\n",
       "      <td>C19</td>\n",
       "      <td>Salaried_Pvt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>97</td>\n",
       "      <td>A97</td>\n",
       "      <td>20.611800</td>\n",
       "      <td>TRIVANDRUM</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,000.00</td>\n",
       "      <td>C20</td>\n",
       "      <td>Govt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>98</td>\n",
       "      <td>A98</td>\n",
       "      <td>40.539000</td>\n",
       "      <td>CALCUTTA</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,001.00</td>\n",
       "      <td>C21</td>\n",
       "      <td>Normal Salary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>99</td>\n",
       "      <td>A99</td>\n",
       "      <td>21.588700</td>\n",
       "      <td>CALCUTTA</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,002.00</td>\n",
       "      <td>C22</td>\n",
       "      <td>Self Employed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>100</td>\n",
       "      <td>A100</td>\n",
       "      <td>23.607600</td>\n",
       "      <td>COCHIN</td>\n",
       "      <td>Silver</td>\n",
       "      <td>INR 1,00,000.00</td>\n",
       "      <td>C5</td>\n",
       "      <td>Salaried_MNC</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Sl No: Customer        Age        City Credit Card Product  \\\n",
       "0        1       A1  40.146511   BANGALORE                Gold   \n",
       "1        2       A2  35.534600    CALCUTTA              Silver   \n",
       "2        3       A3  40.146511      COCHIN            Platimum   \n",
       "3        4       A4  45.820300      BOMBAY            Platimum   \n",
       "4        5       A5  69.663900   BANGALORE            Platimum   \n",
       "..     ...      ...        ...         ...                 ...   \n",
       "95      96      A96  29.631600     CHENNAI              Silver   \n",
       "96      97      A97  20.611800  TRIVANDRUM            Platimum   \n",
       "97      98      A98  40.539000    CALCUTTA            Platimum   \n",
       "98      99      A99  21.588700    CALCUTTA            Platimum   \n",
       "99     100     A100  23.607600      COCHIN              Silver   \n",
       "\n",
       "              Limit Company        Segment  \n",
       "0   INR 5,00,000.00      C1  Self Employed  \n",
       "1   INR 1,00,000.00      C2   Salaried_MNC  \n",
       "2     INR 10,000.00      C3   Salaried_Pvt  \n",
       "3     INR 10,001.00      C4           Govt  \n",
       "4     INR 10,002.00      C5  Normal Salary  \n",
       "..              ...     ...            ...  \n",
       "95  INR 1,00,000.00     C19   Salaried_Pvt  \n",
       "96    INR 10,000.00     C20           Govt  \n",
       "97    INR 10,001.00     C21  Normal Salary  \n",
       "98    INR 10,002.00     C22  Self Employed  \n",
       "99  INR 1,00,000.00      C5   Salaried_MNC  \n",
       "\n",
       "[100 rows x 8 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9912c407",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Month</th>\n",
       "      <th>2004-01</th>\n",
       "      <th>2004-02</th>\n",
       "      <th>2004-03</th>\n",
       "      <th>2004-04</th>\n",
       "      <th>2004-05</th>\n",
       "      <th>2004-09</th>\n",
       "      <th>2004-11</th>\n",
       "      <th>2005-01</th>\n",
       "      <th>2005-02</th>\n",
       "      <th>2005-04</th>\n",
       "      <th>...</th>\n",
       "      <th>2006-03</th>\n",
       "      <th>2006-04</th>\n",
       "      <th>2006-05</th>\n",
       "      <th>2006-06</th>\n",
       "      <th>2006-07</th>\n",
       "      <th>2006-08</th>\n",
       "      <th>2006-09</th>\n",
       "      <th>2006-10</th>\n",
       "      <th>2006-11</th>\n",
       "      <th>2006-12</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>A1</th>\n",
       "      <td>1511173.0</td>\n",
       "      <td>41381.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>131197.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>398404.0</td>\n",
       "      <td>1404194.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>564506.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>220735.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A10</th>\n",
       "      <td>747428.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>435159.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>480729.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>357397.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>233742.0</td>\n",
       "      <td>60213.0</td>\n",
       "      <td>117296.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>267437.0</td>\n",
       "      <td>230894.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A100</th>\n",
       "      <td>42254.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A11</th>\n",
       "      <td>819545.0</td>\n",
       "      <td>501940.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>493104.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>492694.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>148870.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>103940.0</td>\n",
       "      <td>462785.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>92871.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>261662.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A12</th>\n",
       "      <td>744971.0</td>\n",
       "      <td>414392.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>190053.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>287857.0</td>\n",
       "      <td>1208185.0</td>\n",
       "      <td>524412.0</td>\n",
       "      <td>...</td>\n",
       "      <td>877582.0</td>\n",
       "      <td>179585.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>133727.0</td>\n",
       "      <td>347129.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>86873.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Month       2004-01   2004-02   2004-03   2004-04   2004-05   2004-09  \\\n",
       "Customer                                                                \n",
       "A1        1511173.0   41381.0       0.0       0.0  131197.0       0.0   \n",
       "A10        747428.0       0.0  435159.0       0.0  480729.0       0.0   \n",
       "A100        42254.0       0.0       0.0       0.0       0.0       0.0   \n",
       "A11        819545.0  501940.0       0.0  493104.0       0.0       0.0   \n",
       "A12        744971.0  414392.0       0.0       0.0       0.0  190053.0   \n",
       "\n",
       "Month     2004-11   2005-01    2005-02   2005-04  ...   2006-03   2006-04  \\\n",
       "Customer                                          ...                       \n",
       "A1            0.0  398404.0  1404194.0       0.0  ...       0.0  564506.0   \n",
       "A10           0.0       0.0   357397.0       0.0  ...  233742.0   60213.0   \n",
       "A100          0.0       0.0        0.0       0.0  ...       0.0       0.0   \n",
       "A11           0.0       0.0   492694.0       0.0  ...  148870.0       0.0   \n",
       "A12           0.0  287857.0  1208185.0  524412.0  ...  877582.0  179585.0   \n",
       "\n",
       "Month      2006-05   2006-06   2006-07   2006-08  2006-09   2006-10   2006-11  \\\n",
       "Customer                                                                        \n",
       "A1             0.0       0.0       0.0       0.0      0.0  220735.0       0.0   \n",
       "A10       117296.0       0.0  267437.0  230894.0      0.0       0.0       0.0   \n",
       "A100           0.0       0.0       0.0       0.0      0.0       0.0       0.0   \n",
       "A11       103940.0  462785.0       0.0       0.0  92871.0       0.0  261662.0   \n",
       "A12            0.0       0.0  133727.0  347129.0      0.0   86873.0       0.0   \n",
       "\n",
       "Month     2006-12  \n",
       "Customer           \n",
       "A1            0.0  \n",
       "A10           0.0  \n",
       "A100          0.0  \n",
       "A11           0.0  \n",
       "A12           0.0  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "monthly_spend = data2.pivot_table(index='Customer', columns='Month', values='Amount', aggfunc='sum')\n",
    "monthly_spend.columns = pd.to_datetime(monthly_spend.columns).to_period('M')\n",
    "monthly_spend = monthly_spend.groupby(pd.PeriodIndex(monthly_spend.columns, freq='M'), axis=1).sum()\n",
    "monthly_spend.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b54563f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sl No:</th>\n",
       "      <th>Customer</th>\n",
       "      <th>Age</th>\n",
       "      <th>City</th>\n",
       "      <th>Credit Card Product</th>\n",
       "      <th>Limit</th>\n",
       "      <th>Company</th>\n",
       "      <th>Segment</th>\n",
       "      <th>2004-01</th>\n",
       "      <th>2004-02</th>\n",
       "      <th>...</th>\n",
       "      <th>2006-03</th>\n",
       "      <th>2006-04</th>\n",
       "      <th>2006-05</th>\n",
       "      <th>2006-06</th>\n",
       "      <th>2006-07</th>\n",
       "      <th>2006-08</th>\n",
       "      <th>2006-09</th>\n",
       "      <th>2006-10</th>\n",
       "      <th>2006-11</th>\n",
       "      <th>2006-12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>A1</td>\n",
       "      <td>40.146511</td>\n",
       "      <td>BANGALORE</td>\n",
       "      <td>Gold</td>\n",
       "      <td>INR 5,00,000.00</td>\n",
       "      <td>C1</td>\n",
       "      <td>Self Employed</td>\n",
       "      <td>1511173.0</td>\n",
       "      <td>41381.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>564506.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>220735.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>A2</td>\n",
       "      <td>35.534600</td>\n",
       "      <td>CALCUTTA</td>\n",
       "      <td>Silver</td>\n",
       "      <td>INR 1,00,000.00</td>\n",
       "      <td>C2</td>\n",
       "      <td>Salaried_MNC</td>\n",
       "      <td>735264.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>126061.0</td>\n",
       "      <td>442881.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>73294.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>A3</td>\n",
       "      <td>40.146511</td>\n",
       "      <td>COCHIN</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,000.00</td>\n",
       "      <td>C3</td>\n",
       "      <td>Salaried_Pvt</td>\n",
       "      <td>647217.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>18155.0</td>\n",
       "      <td>67041.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>411959.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>A4</td>\n",
       "      <td>45.820300</td>\n",
       "      <td>BOMBAY</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,001.00</td>\n",
       "      <td>C4</td>\n",
       "      <td>Govt</td>\n",
       "      <td>1103216.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>424647.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>332273.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>A5</td>\n",
       "      <td>69.663900</td>\n",
       "      <td>BANGALORE</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,002.00</td>\n",
       "      <td>C5</td>\n",
       "      <td>Normal Salary</td>\n",
       "      <td>861968.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1175483.0</td>\n",
       "      <td>777255.0</td>\n",
       "      <td>204841.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Sl No: Customer        Age       City Credit Card Product            Limit  \\\n",
       "0       1       A1  40.146511  BANGALORE                Gold  INR 5,00,000.00   \n",
       "1       2       A2  35.534600   CALCUTTA              Silver  INR 1,00,000.00   \n",
       "2       3       A3  40.146511     COCHIN            Platimum    INR 10,000.00   \n",
       "3       4       A4  45.820300     BOMBAY            Platimum    INR 10,001.00   \n",
       "4       5       A5  69.663900  BANGALORE            Platimum    INR 10,002.00   \n",
       "\n",
       "  Company        Segment    2004-01  2004-02  ...    2006-03   2006-04  \\\n",
       "0      C1  Self Employed  1511173.0  41381.0  ...        0.0  564506.0   \n",
       "1      C2   Salaried_MNC   735264.0      0.0  ...        0.0  126061.0   \n",
       "2      C3   Salaried_Pvt   647217.0      0.0  ...    18155.0   67041.0   \n",
       "3      C4           Govt  1103216.0      0.0  ...   424647.0       0.0   \n",
       "4      C5  Normal Salary   861968.0      0.0  ...  1175483.0  777255.0   \n",
       "\n",
       "    2006-05  2006-06  2006-07  2006-08  2006-09   2006-10  2006-11   2006-12  \n",
       "0       0.0      0.0      0.0      0.0      0.0  220735.0      0.0       0.0  \n",
       "1  442881.0      0.0      0.0      0.0      0.0       0.0  73294.0       0.0  \n",
       "2       0.0      0.0      0.0      0.0      0.0       0.0      0.0  411959.0  \n",
       "3  332273.0      0.0      0.0      0.0      0.0       0.0      0.0       0.0  \n",
       "4  204841.0      0.0      0.0      0.0      0.0       0.0      0.0       0.0  \n",
       "\n",
       "[5 rows x 38 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "merged_table = data.merge(monthly_spend, left_on='Customer', right_on='Customer')\n",
    "merged_table.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "86dcabb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Month</th>\n",
       "      <th>2004-01</th>\n",
       "      <th>2004-02</th>\n",
       "      <th>2004-03</th>\n",
       "      <th>2004-04</th>\n",
       "      <th>2004-05</th>\n",
       "      <th>2004-09</th>\n",
       "      <th>2004-11</th>\n",
       "      <th>2005-01</th>\n",
       "      <th>2005-02</th>\n",
       "      <th>2005-04</th>\n",
       "      <th>...</th>\n",
       "      <th>2006-03</th>\n",
       "      <th>2006-04</th>\n",
       "      <th>2006-05</th>\n",
       "      <th>2006-06</th>\n",
       "      <th>2006-07</th>\n",
       "      <th>2006-08</th>\n",
       "      <th>2006-09</th>\n",
       "      <th>2006-10</th>\n",
       "      <th>2006-11</th>\n",
       "      <th>2006-12</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>A1</th>\n",
       "      <td>1.362775e+06</td>\n",
       "      <td>191180.0116</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1581.969829</td>\n",
       "      <td>1.199808e+06</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.712733e+05</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>108320.1205</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>17931.39929</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A10</th>\n",
       "      <td>1.149997e+06</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>266929.3785</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>446068.328500</td>\n",
       "      <td>9.101423e+05</td>\n",
       "      <td>279491.6147</td>\n",
       "      <td>...</td>\n",
       "      <td>125956.719040</td>\n",
       "      <td>4.301121e+05</td>\n",
       "      <td>298502.78290</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>427415.08470</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A100</th>\n",
       "      <td>1.511414e+05</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A11</th>\n",
       "      <td>1.052386e+06</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.106038e+06</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>...</td>\n",
       "      <td>160690.212501</td>\n",
       "      <td>1.135005e+06</td>\n",
       "      <td>424846.39487</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>54897.90719</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A12</th>\n",
       "      <td>3.686586e+05</td>\n",
       "      <td>243130.4002</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>397648.5597</td>\n",
       "      <td>0.0</td>\n",
       "      <td>258170.492</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29185.273690</td>\n",
       "      <td>1.059845e+06</td>\n",
       "      <td>328164.5473</td>\n",
       "      <td>...</td>\n",
       "      <td>955025.272200</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>418624.51220</td>\n",
       "      <td>451548.9004</td>\n",
       "      <td>594688.68280</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>439421.5657</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Month          2004-01      2004-02      2004-03      2004-04  2004-05  \\\n",
       "Customer                                                                 \n",
       "A1        1.362775e+06  191180.0116       0.0000       0.0000      0.0   \n",
       "A10       1.149997e+06       0.0000  266929.3785       0.0000      0.0   \n",
       "A100      1.511414e+05       0.0000       0.0000       0.0000      0.0   \n",
       "A11       1.052386e+06       0.0000       0.0000       0.0000      0.0   \n",
       "A12       3.686586e+05  243130.4002       0.0000  397648.5597      0.0   \n",
       "\n",
       "Month        2004-09  2004-11        2005-01       2005-02      2005-04  ...  \\\n",
       "Customer                                                                 ...   \n",
       "A1             0.000      0.0    1581.969829  1.199808e+06       0.0000  ...   \n",
       "A10            0.000      0.0  446068.328500  9.101423e+05  279491.6147  ...   \n",
       "A100           0.000      0.0       0.000000  0.000000e+00       0.0000  ...   \n",
       "A11            0.000      0.0       0.000000  1.106038e+06       0.0000  ...   \n",
       "A12       258170.492      0.0   29185.273690  1.059845e+06  328164.5473  ...   \n",
       "\n",
       "Month           2006-03       2006-04       2006-05      2006-06  \\\n",
       "Customer                                                           \n",
       "A1             0.000000  3.712733e+05       0.00000       0.0000   \n",
       "A10       125956.719040  4.301121e+05  298502.78290       0.0000   \n",
       "A100           0.000000  0.000000e+00       0.00000       0.0000   \n",
       "A11       160690.212501  1.135005e+06  424846.39487       0.0000   \n",
       "A12       955025.272200  0.000000e+00  418624.51220  451548.9004   \n",
       "\n",
       "Month          2006-07  2006-08      2006-09      2006-10      2006-11  \\\n",
       "Customer                                                                 \n",
       "A1             0.00000      0.0  108320.1205       0.0000  17931.39929   \n",
       "A10       427415.08470      0.0       0.0000       0.0000      0.00000   \n",
       "A100           0.00000      0.0       0.0000       0.0000      0.00000   \n",
       "A11        54897.90719      0.0       0.0000       0.0000      0.00000   \n",
       "A12       594688.68280      0.0       0.0000  439421.5657      0.00000   \n",
       "\n",
       "Month     2006-12  \n",
       "Customer           \n",
       "A1            0.0  \n",
       "A10           0.0  \n",
       "A100          0.0  \n",
       "A11           0.0  \n",
       "A12           0.0  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "monthly_repayment = data1.pivot_table(index='Customer', columns='Month', values='Repay', aggfunc='sum')\n",
    "monthly_repayment.columns = pd.to_datetime(monthly_repayment.columns).to_period('M')\n",
    "monthly_repayment = monthly_repayment.groupby(pd.PeriodIndex(monthly_repayment.columns, freq='M'), axis=1).sum()\n",
    "monthly_repayment.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3af7f4b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sl No:</th>\n",
       "      <th>Customer</th>\n",
       "      <th>Age</th>\n",
       "      <th>City</th>\n",
       "      <th>Credit Card Product</th>\n",
       "      <th>Limit</th>\n",
       "      <th>Company</th>\n",
       "      <th>Segment</th>\n",
       "      <th>2004-01</th>\n",
       "      <th>2004-02</th>\n",
       "      <th>...</th>\n",
       "      <th>2006-03</th>\n",
       "      <th>2006-04</th>\n",
       "      <th>2006-05</th>\n",
       "      <th>2006-06</th>\n",
       "      <th>2006-07</th>\n",
       "      <th>2006-08</th>\n",
       "      <th>2006-09</th>\n",
       "      <th>2006-10</th>\n",
       "      <th>2006-11</th>\n",
       "      <th>2006-12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>A1</td>\n",
       "      <td>40.146511</td>\n",
       "      <td>BANGALORE</td>\n",
       "      <td>Gold</td>\n",
       "      <td>INR 5,00,000.00</td>\n",
       "      <td>C1</td>\n",
       "      <td>Self Employed</td>\n",
       "      <td>1.362775e+06</td>\n",
       "      <td>191180.0116</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>371273.2744</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>108320.1205</td>\n",
       "      <td>0.000</td>\n",
       "      <td>17931.39929</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>A2</td>\n",
       "      <td>35.534600</td>\n",
       "      <td>CALCUTTA</td>\n",
       "      <td>Silver</td>\n",
       "      <td>INR 1,00,000.00</td>\n",
       "      <td>C2</td>\n",
       "      <td>Salaried_MNC</td>\n",
       "      <td>6.640794e+05</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>346376.7399</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>414752.806</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>A3</td>\n",
       "      <td>40.146511</td>\n",
       "      <td>COCHIN</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,000.00</td>\n",
       "      <td>C3</td>\n",
       "      <td>Salaried_Pvt</td>\n",
       "      <td>1.347209e+05</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>315238.8082</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>329095.55790</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>A4</td>\n",
       "      <td>45.820300</td>\n",
       "      <td>BOMBAY</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,001.00</td>\n",
       "      <td>C4</td>\n",
       "      <td>Govt</td>\n",
       "      <td>2.499316e+05</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>...</td>\n",
       "      <td>181662.2953</td>\n",
       "      <td>493715.4111</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>196563.7558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>A5</td>\n",
       "      <td>69.663900</td>\n",
       "      <td>BANGALORE</td>\n",
       "      <td>Platimum</td>\n",
       "      <td>INR 10,002.00</td>\n",
       "      <td>C5</td>\n",
       "      <td>Normal Salary</td>\n",
       "      <td>1.802039e+06</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>...</td>\n",
       "      <td>970251.0741</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>169470.2565</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Sl No: Customer        Age       City Credit Card Product            Limit  \\\n",
       "0       1       A1  40.146511  BANGALORE                Gold  INR 5,00,000.00   \n",
       "1       2       A2  35.534600   CALCUTTA              Silver  INR 1,00,000.00   \n",
       "2       3       A3  40.146511     COCHIN            Platimum    INR 10,000.00   \n",
       "3       4       A4  45.820300     BOMBAY            Platimum    INR 10,001.00   \n",
       "4       5       A5  69.663900  BANGALORE            Platimum    INR 10,002.00   \n",
       "\n",
       "  Company        Segment       2004-01      2004-02  ...      2006-03  \\\n",
       "0      C1  Self Employed  1.362775e+06  191180.0116  ...       0.0000   \n",
       "1      C2   Salaried_MNC  6.640794e+05       0.0000  ...       0.0000   \n",
       "2      C3   Salaried_Pvt  1.347209e+05       0.0000  ...       0.0000   \n",
       "3      C4           Govt  2.499316e+05       0.0000  ...  181662.2953   \n",
       "4      C5  Normal Salary  1.802039e+06       0.0000  ...  970251.0741   \n",
       "\n",
       "       2006-04      2006-05  2006-06  2006-07  2006-08      2006-09  \\\n",
       "0  371273.2744       0.0000      0.0      0.0      0.0  108320.1205   \n",
       "1  346376.7399       0.0000      0.0      0.0      0.0       0.0000   \n",
       "2  315238.8082       0.0000      0.0      0.0      0.0       0.0000   \n",
       "3  493715.4111       0.0000      0.0      0.0      0.0       0.0000   \n",
       "4       0.0000  169470.2565      0.0      0.0      0.0       0.0000   \n",
       "\n",
       "      2006-10       2006-11      2006-12  \n",
       "0       0.000   17931.39929       0.0000  \n",
       "1  414752.806       0.00000       0.0000  \n",
       "2       0.000  329095.55790       0.0000  \n",
       "3       0.000       0.00000  196563.7558  \n",
       "4       0.000       0.00000       0.0000  \n",
       "\n",
       "[5 rows x 38 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged_table1 = data.merge(monthly_repayment, left_on='Customer', right_on='Customer')\n",
    "merged_table1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0da69084",
   "metadata": {},
   "source": [
    "Highest top 10 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "4e057ebf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer</th>\n",
       "      <th>Repay</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A22</td>\n",
       "      <td>9.767171e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A60</td>\n",
       "      <td>9.262032e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A61</td>\n",
       "      <td>8.807888e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A40</td>\n",
       "      <td>8.805085e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A47</td>\n",
       "      <td>8.529826e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>A43</td>\n",
       "      <td>8.458621e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>A48</td>\n",
       "      <td>8.432804e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>A41</td>\n",
       "      <td>8.374046e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>A49</td>\n",
       "      <td>8.259841e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>A45</td>\n",
       "      <td>8.115210e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Customer         Repay\n",
       "0      A22  9.767171e+06\n",
       "1      A60  9.262032e+06\n",
       "2      A61  8.807888e+06\n",
       "3      A40  8.805085e+06\n",
       "4      A47  8.529826e+06\n",
       "5      A43  8.458621e+06\n",
       "6      A48  8.432804e+06\n",
       "7      A41  8.374046e+06\n",
       "8      A49  8.259841e+06\n",
       "9      A45  8.115210e+06"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_10_customers = data1.groupby('Customer')['Repay'].sum().nlargest(10).reset_index()\n",
    "top_10_customers"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d320f223",
   "metadata": {},
   "source": [
    "Segmnet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ed47657f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Govt'"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "segment_spending = data.groupby('Segment')['Customer'].count()\n",
    "most_spending_segment = segment_spending.idxmax() #idxmax finds the maximum value for the given column\n",
    "most_spending_segment"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec5704ae",
   "metadata": {},
   "source": [
    "Age Group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ad27c460",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'30-45'"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a new column 'Age Group' without modifying the original 'Age' column\n",
    "data['Age Group'] = pd.cut(data['Age'], bins=[18, 30, 45, 60, float('inf')], labels=[ '18-30', '30-45', '45-60', '60+'], right=False)\n",
    "\n",
    "age_group_spending = data.groupby('Age Group')['Customer'].count()\n",
    "most_spending_age_group = age_group_spending.idxmax()\n",
    "most_spending_age_group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "cbb05b68",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a bar plot of age group spending\n",
    "plt.figure(figsize=(8, 6))\n",
    "age_group_spending.plot(kind='bar')\n",
    "plt.xlabel('Age Group')\n",
    "plt.ylabel('Spending Count')\n",
    "plt.title('Spending Count by Age Group')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c28c3681",
   "metadata": {},
   "source": [
    "Spending More Category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ec5399cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Travel'"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "category_spending = data2.groupby('Category')['Amount'].sum()\n",
    "most_spending_category = category_spending.idxmax()\n",
    "most_spending_category"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
